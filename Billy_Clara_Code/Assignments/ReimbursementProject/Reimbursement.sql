CREATE TABLE ERS_REIMBURSEMENT (
REIMB_ID NUMBER(10) PRIMARY KEY,
REIMB_AMOUNT NUMBER(20,2) NOT NULL,
REIMB_SUBMITTED TIMESTAMP NOT NULL,
REIMB_RESOLVED TIMESTAMP NOT NULL,
REIMB_DESC VARCHAR2(250) NOT NULL,
REIMB_RECEIPT BLOB,
REIMB_AUTHOR NUMBER(10) NOT NULL,
REIMB_RESOLVER NUMBER(10) NOT NULL,
REIMB_STATUSID NUMBER(10) NOT NULL,
REIMB_TYPEID NUMBER(10) NOT NULL,
FOREIGN KEY(REIMB_AUTHOR) REFERENCES ERS_USER(USERID),
FOREIGN KEY(REIMB_RESOLVER) REFERENCES ERS_USER(USERID),
FOREIGN KEY(REIMB_STATUSID) REFERENCES ERS_STATUS(STATUSID),
FOREIGN KEY(REIMB_TYPEID) REFERENCES ERS_TYPE(TYPEID)
);

ALTER TABLE ERS_REIMBURSEMENT
MODIFY REIMB_SUBMITTED TIMESTAMP NULL;

CREATE TABLE ERS_USER(
USERID NUMBER(10) PRIMARY KEY,
USERNAME VARCHAR2(50) NOT NULL UNIQUE,
PASSWORD VARCHAR2(50) NOT NULL,
FIRSTNAME VARCHAR2(100) NOT NULL,
LASTNAME VARCHAR2(100) NOT NULL,
EMAIL VARCHAR2(150) NOT NULL,
USER_ROLE NUMBER(10) NOT NULL,
FOREIGN KEY (USER_ROLE) REFERENCES ERS_USER_ROLE(USER_ROLEID)
);


CREATE TABLE ERS_STATUS(
STATUSID NUMBER(10) PRIMARY KEY,
STATUS VARCHAR2(10) NOT NULL
);

CREATE TABLE ERS_TYPE(
TYPEID NUMBER(10) PRIMARY KEY,
TYPE VARCHAR2(20) NOT NULL
);

CREATE TABLE ERS_USER_ROLE(
USER_ROLEID NUMBER(10) PRIMARY KEY,
USER_ROLE VARCHAR2(20) NOT NULL
);

INSERT INTO ERS_USER(USERNAME, PASSWORD, FIRSTNAME, LASTNAME, EMAIL, USER_ROLE)
VALUES('Chris.a2', 'Chr!s00', 'Chris', 'Torres', 'chris.torr@gmail.com', 3);
SELECT * FROM ERS_USER;

CREATE SEQUENCE ERSUSERSEQ;

CREATE OR REPLACE TRIGGER ERSUSER_TRIGGER 
   BEFORE INSERT ON ERS_USER 
   FOR EACH ROW 
   BEGIN
      
      SELECT ERSUSERSEQ.NEXTVAL
      INTO :NEW.USERID
      FROM DUAL;
   END;
/

INSERT INTO ERS_USER_ROLE(USER_ROLEID, USER_ROLE)
VALUES(3, 'ASSOCIATE');
SELECT * FROM ERS_USER_ROLE;

INSERT INTO ERS_STATUS(STATUSID, STATUS)
VALUES(3, 'DENIED');
SELECT * FROM ERS_STATUS;

commit;

CREATE SEQUENCE ERSREIMSEQ;

CREATE OR REPLACE TRIGGER ERSREIM_TRIGGER 
   BEFORE INSERT ON ERS_REIMBURSEMENT 
   FOR EACH ROW 
   BEGIN
      
      SELECT ERSREIMSEQ.NEXTVAL
      INTO :NEW.REIMB_ID
      FROM DUAL;
   END;
/
INSERT INTO ERS_REIMBURSEMENT(REIMB_AMOUNT, REIMB_SUBMITTED, REIMB_RESOLVED, REIMB_DESC, REIMB_AUTHOR,
REIMB_RESOLVER, REIMB_STATUSID, REIMB_TYPEID)
VALUES(150.50, CURRENT_TIMESTAMP, NULL, 'DINING OUT AND TRAVEL SNACKS', 4, 1, 1, 2 );

INSERT INTO ERS_TYPE(TYPEID, TYPE)
VALUES(3, 'LODGING');

SELECT ERS_USER.USERID, ERS_USER.FIRSTNAME, ERS_USER.LASTNAME, ERS_USER_ROLE.USER_ROLE, ERS_REIMBURSEMENT.REIMB_AMOUNT, ERS_STATUS.STATUS
FROM ERS_USER
INNER JOIN ERS_REIMBURSEMENT ON ERS_REIMBURSEMENT.REIMB_AUTHOR = ERS_USER.USERID
INNER JOIN ERS_USER_ROLE ON ERS_USER.USER_ROLE = ERS_USER_ROLE.USER_ROLEID
INNER JOIN ERS_STATUS ON ERS_REIMBURSEMENT.REIMB_STATUSID = ERS_STATUS.STATUSID
WHERE USERID = 3;

SELECT REIMB_ID, FIRSTNAME, LASTNAME, EMAIL, ERS_REIMBURSEMENT.REIMB_AMOUNT, ERS_REIMBURSEMENT.REIMB_SUBMITTED,
ERS_REIMBURSEMENT.REIMB_RESOLVED,
ERS_REIMBURSEMENT.REIMB_DESC, ERS_STATUS.STATUS, ERS_TYPE.TYPE
FROM ERS_REIMBURSEMENT
INNER JOIN ERS_USER ON ERS_REIMBURSEMENT.REIMB_AUTHOR = ERS_USER.USERID
INNER JOIN ERS_STATUS ON ERS_REIMBURSEMENT.REIMB_STATUSID = ERS_STATUS.STATUSID
INNER JOIN ERS_TYPE ON ERS_REIMBURSEMENT.REIMB_TYPEID = ERS_TYPE.TYPEID;

SELECT * FROM ERS_REIMBURSEMENT WHERE REIMB_AUTHOR = 3;

ALTER TABLE ERS_REIMBURSEMENT
MODIFY REIMB_RESOLVER NULL;

UPDATE ERS_REIMBURSEMENT
SET REIMB_STATUSID = 2
WHERE REIMB_ID = 41;

COMMIT;