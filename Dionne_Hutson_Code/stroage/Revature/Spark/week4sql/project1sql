CREATE TABLE ERS_REIMBURSEMENT_STATUS(
REIMB_STATUS_ID NUMBER PRIMARY KEY,
REIMB_STATUS VARCHAR2(10) DEFAULT 'Pending' NOT NULL 
);
 /* INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES(1,'Pending');
  INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES(2,'Approved');
  INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES(3,'Denied');
  commit;
  SELECT * FROM ERS_REIMBURSEMENT_STATUS;*/
CREATE TABLE ERS_REIMBURSEMENT_TYPE(
REIMB_TYPE_ID NUMBER PRIMARY KEY,
REIMB_TYPE VARCHAR2(10) NOT NULL
);
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(1,'Lodging');
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(2,'Food');
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(3,'Travel');
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(4,'Memberships');
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(5,'Makeup') ;
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(6,'Skin Care');
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(7,'Clothes');
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(8,'Acessories');
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(9,'Talent');
  INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES(10,'Miscellaneous');
  
CREATE TABLE ERS_USER_ROLES(
ERS_USER_ROLE_ID NUMBER PRIMARY KEY,
USER_ROLE VARCHAR2(10) NOT NULL
);
  /*INSERT INTO ERS_USER_ROLES VALUES(1,'Employee');
  INSERT INTO ERS_USER_ROLES VALUES(2,'Manager');
  commit;
  select*from ERS_USER_ROLES;*/
  
CREATE TABLE ERS_USERS(
ERS_USERS_ID NUMBER PRIMARY KEY,
ERS_USERNAME VARCHAR2(50) UNIQUE NOT NULL,
ERS_PASSWORD VARCHAR2(50) NOT NULL,
USER_FIRST_NAME VARCHAR2(100) NOT NULL,
USER_LAST_NAME VARCHAR2(100) NOT NULL,
USER_EMAIL VARCHAR2(150) NOT NULL,
USER_ROLE_ID NUMBER NOT NULL,
constraint USER_ROLES_FK Foreign Key(USER_ROLE_ID)
references ERS_USER_ROLES(ERS_USER_ROLE_ID)
);


Insert Into ERS_USERS(ERS_USERNAME,ERS_PASSWORD, USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID)  
VALUES('bass','bass','bass','bass','bass@bass',2);
select*from ers_users;
commit;
CREATE TABLE ERS_REIMBURSEMENT(
REIMB_ID NUMBER PRIMARY KEY,
REIMB_AMOUNT NUMBER NOT NULL,
REIMB_SUBMITTED TIMESTAMP NOT NULL,
REIMB_RESOLVED TIMESTAMP,
REIMB_DESCRIPTION VARCHAR2(250),
REIMB_RECEIPT BLOB,
REIMB_AUTHOR NUMBER NOT NULL,
  CONSTRAINT USERS_FK_AUTH FOREIGN KEY(REIMB_AUTHOR)
  REFERENCES ERS_USERS(ERS_USERS_ID),
REIMB_RESOLVER NUMBER,
  CONSTRAINT USERS_FK_RESLVR FOREIGN KEY(REIMB_RESOLVER)
  REFERENCES ERS_USERS(ERS_USERS_ID),
REIMB_STATUS_ID NUMBER NOT NULL,
  CONSTRAINT ERS_REIMBURSEMENT_STATUS_FK FOREIGN KEY(REIMB_STATUS_ID)
  REFERENCES ERS_REIMBURSEMENT_STATUS(REIMB_STATUS_ID),
REIMB_TYPE_ID NUMBER NOT NULL,
  CONSTRAINT ERS_REIMBURSEMENT_TYPE_FK FOREIGN KEY(REIMB_TYPE_ID)
  REFERENCES ERS_REIMBURSEMENT_TYPE(REIMB_TYPE_ID)
);

insert into ERS_REIMBURSEMENT(REIMB_AMOUNT, REIMB_SUBMITTED, REIMB_RESOLVED, REIMB_DESCRIPTION, REIMB_RECEIPT, REIMB_AUTHOR,
REIMB_RESOLVER, REIMB_STATUS_ID,REIMB_TYPE_ID)Values(36.00,CURRENT_TIMESTAMP,null,'jasdh',null,122,null,1,1);
select*from ers_reimbursement where REIMB_STATUS_ID=1;
COMMIT;
UPDATE ERS_REIMBURSEMENT SET REIMB_RESOLVED=CURRENT_TIMESTAMP,REIMB_RESOLVER=127,REIMB_STATUS_ID=2 WHERE REIMB_ID=141;
SELECT*FROM ERS_USERS WHERE LOWER(ERS_USERNAME)='tom';
/*
MAGAZINE REIMBURSEMENT
  FOOD
  MAKEUP
  SKINCARE
  MISCELLANEOUS
  TRAVEL
  LODGING
  MEMBERSHIPS
  CLOTHES & ACESSORIES
  
*/

----------------------------Trigger and Sequecne---------------------------------------
create sequence ERSreim_seq;
commit;
/*trigger stuff*/
Create or replace Trigger ERSreim_Trigger
before insert on ERS_REIMBURSEMENT
for each row
begin
  Select user_seq.nextVal--++Genre_seq
  into :New.REIMB_ID---:col represents a placeholder value
  from dual;
end;
/

