package com.revature.io;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

public class FileIO {
	/*
	 * Associated classes with writing/reading to fiiles
	 * BufferedWriter/Reader FileWriter/Reader
	 * means by which we can create a connection with a noter resource
	 * ASSOCIATE WITH:try-with resources
	 * this is a parameterized try block where the parameter is the instantiation of a resource, object that iplements the autoclosabke interface, we no onger need to explicityl close this resource
	 */
	
	static String filePath="src/com/revature/io/text.txt";//relative file path
	
	static void writeString(String text) {
		//file we=riter is instatiated in the buffered writer constructor// file writer throw an except
		//try with resources auto closes//autoclosable is an interface; if we use try with resources we dont need a close or catch
		
		try(BufferedWriter bw=new BufferedWriter(new FileWriter(filePath))) {// try with resources; otherwise we close in finally with many try catch blocks
		bw.write(text+"/n");	
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			bw.close();
		}
	}

}
