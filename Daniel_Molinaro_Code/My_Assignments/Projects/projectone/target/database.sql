/*******************************************************************************
   Create Tables for Expense Reimbursement Application
*******************************************************************************/
create table ERS_REIMB(
	REIMB_ID NUMBER PRIMARY KEY,
	REIMB_AMOUNT NUMBER NOT NULL,
	REIMB_SUBMITTED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	REIMB_RESOLVED TIMESTAMP DEFAULT NULL,
	REIMB_DESCRIPTION VARCHAR2(250) NOT NULL,
	REIMB_AUTHOR NUMBER NOT NULL, 
  REIMB_RESOLVER NUMBER DEFAULT NULL,
  REIMB_STATUS_ID NUMBER DEFAULT 1,
  REIMB_TYPE_ID NUMBER NOT NULL,
  FOREIGN KEY (REIMB_AUTHOR) REFERENCES ERS_USERS(ERS_USERS_ID),
	FOREIGN KEY (REIMB_RESOLVER) REFERENCES ERS_USERS(ERS_USERS_ID),
	FOREIGN KEY (REIMB_STATUS_ID) REFERENCES ERS_REIMB_STATUS(REIMB_STATUS_ID),
	FOREIGN KEY (REIMB_TYPE_ID)	REFERENCES ERS_REIMB_TYPE(REIMB_TYPE_ID)
	);

CREATE SEQUENCE ERS_REIMB_SEQ;

CREATE TRIGGER ERS_REIMB_Trigger
BEFORE INSERT ON ERS_REIMB
FOR EACH ROW
BEGIN
   SELECT ERS_REIMB_SEQ.NEXTVAL
   INTO :NEW.REIMB_ID
   FROM DUAL;
END;
/

create table ERS_USERS(
	ERS_USERS_ID NUMBER PRIMARY KEY,
	ERS_USERNAME VARCHAR2(50) UNIQUE NOT NULL,
	ERS_PASSWORD VARCHAR2(50) NOT NULL,
	USER_FIRST_NAME VARCHAR2(100) NOT NULL,
	USER_LAST_NAME VARCHAR2(100) NOT NULL,
	USER_EMAIL VARCHAR2(150) UNIQUE NOT NULL,
	USER_ROLE_ID NUMBER NOT NULL,
  FOREIGN KEY(USER_ROLE_ID)	REFERENCES ERS_USER_ROLES(ERS_USER_ROLE_ID)
	);

CREATE SEQUENCE ERS_USERS_SEQ;

CREATE TRIGGER ERS_USERS_Trigger
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
   SELECT ERS_USERS_SEQ.NEXTVAL
   INTO :NEW.ERS_USERS_ID
   FROM DUAL;
END;
/

create table ERS_REIMB_STATUS(
	REIMB_STATUS_ID NUMBER PRIMARY KEY,
	REIMB_STATUS VARCHAR2(20) NOT NULL
	);

create table ERS_REIMB_TYPE(
	REIMB_TYPE_ID NUMBER PRIMARY KEY,
	REIMB_TYPE VARCHAR2(20) NOT NULL
	);
	
create table ERS_USER_ROLES(
	ERS_USER_ROLE_ID NUMBER PRIMARY KEY,
	USER_ROLE VARCHAR2(20) NOT NULL
	);

insert into ERS_USER_ROLES(ERS_USER_ROLE_ID, USER_ROLE) values (100, 'Front-Office');
insert into ERS_USER_ROLES(ERS_USER_ROLE_ID, USER_ROLE) values (200, 'Back-Office');
insert into ERS_USER_ROLES(ERS_USER_ROLE_ID, USER_ROLE) values (300, 'Finance Manager');
insert into ERS_USER_ROLES(ERS_USER_ROLE_ID, USER_ROLE) values (400, 'Director');
insert into ERS_USER_ROLES(ERS_USER_ROLE_ID, USER_ROLE) values (500, 'Board Officer');

insert into ERS_REIMB_TYPE(REIMB_TYPE_ID, REIMB_TYPE) values (10, 'Food/Entertainment');
insert into ERS_REIMB_TYPE(REIMB_TYPE_ID, REIMB_TYPE) values (20, 'Travel');
insert into ERS_REIMB_TYPE(REIMB_TYPE_ID, REIMB_TYPE) values (30, 'Education');
insert into ERS_REIMB_TYPE(REIMB_TYPE_ID, REIMB_TYPE) values (40, 'Medical');

insert into ERS_REIMB_STATUS(REIMB_STATUS_ID, REIMB_STATUS) values (1, 'Pending');
insert into ERS_REIMB_STATUS(REIMB_STATUS_ID, REIMB_STATUS) values (2, 'Approved');
insert into ERS_REIMB_STATUS(REIMB_STATUS_ID, REIMB_STATUS) values (3, 'Denied');

INSERT INTO ERS_USERS(ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID)
VALUES ('aramos1', 'aramos12', 'Angelica', 'Ramos', 'aramos@gmail.com', 500);
	
INSERT INTO ERS_USERS(ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID)
VALUES ('pbyrd1', 'pbyrd12', 'Paul', 'Byrd', 'pbyrd@gmail.com', 300);
	
INSERT INTO ERS_USERS(ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID)
VALUES ('vharrell1', 'vharrell12', 'Vivian', 'Harrell', 'vharrell@gmail.com', 200);

INSERT INTO ERS_USERS(ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID)
VALUES ('jbradshaw1', 'jbradshaw12', 'Jackson', 'Bradshaw', 'jbradshaw@gmail.com', 400);

INSERT INTO ERS_USERS(ERS_USERNAME,ERS_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_EMAIL,USER_ROLE_ID)
VALUES ('bgreer1', 'bgreer12', 'Bradley', 'Greer', 'bgreer@gmail.com', 100);

insert into ERS_REIMB(REIMB_AMOUNT,REIMB_SUBMITTED,REIMB_RESOLVED,REIMB_DESCRIPTION,REIMB_RECEIPT,REIMB_AUTHOR,REIMB_RESOLVER,REIMB_STATUS_ID,REIMB_TYPE_ID) 
values (300,TO_TIMESTAMP('2019-07-06 08:09:00.879000000', 'YYYY-MM-DD HH24:MI:SS.FF'),NULL,'Dining',NULL,1,2,1,10);

insert into ERS_REIMB(REIMB_AMOUNT,REIMB_SUBMITTED,REIMB_RESOLVED,REIMB_DESCRIPTION,REIMB_RECEIPT,REIMB_AUTHOR,REIMB_RESOLVER,REIMB_STATUS_ID,REIMB_TYPE_ID) 
values (50,TO_TIMESTAMP('2019-07-05 08:21:00.876000000', 'YYYY-MM-DD HH24:MI:SS.FF'),
TO_TIMESTAMP('2019-07-08 12:47:00.792000000', 'YYYY-MM-DD HH24:MI:SS.FF'),'Seminar',NULL,3,2,2,30);

insert into ERS_REIMB(REIMB_AMOUNT,REIMB_DESCRIPTION,REIMB_AUTHOR,REIMB_RESOLVER,REIMB_STATUS_ID,REIMB_TYPE_ID) 
values (1000,'Air travel',1,2,2,10);

create or replace TRIGGER UPDATE_REIMB_RESOLVED 
  before UPDATE of REIMB_STATUS_ID ON ERS_REIMB 
  for each row
  when (new.REIMB_STATUS_ID = 2 or new.REIMB_STATUS_ID = 3)
  BEGIN
  :new.reimb_resolved:= current_timestamp;
  END;
/
SELECT*FROM ERS_REIMB_STATUS;
SELECT*FROM ERS_REIMB_TYPE;
SELECT*FROM ERS_USER_ROLES;
SELECT*FROM ERS_USERS;
SELECT*FROM ERS_REIMB;

insert into ERS_REIMB(REIMB_AMOUNT,REIMB_DESCRIPTION,REIMB_AUTHOR,REIMB_RESOLVER,REIMB_STATUS_ID,REIMB_TYPE_ID) 
values (1000,'Plane travel',2,2,2,10);


UPDATE ERS_REIMB
set REIMB_STATUS_ID = 2
where REIMB_STATUS_ID = 1;

SELECT*FROM ERS_REIMB;

UPDATE ERS_REIMB
set REIMB_TYPE_ID = 20
where REIMB_ID = 102;

  CREATE OR REPLACE PROCEDURE UPDATE_REIMB
  (STATUS_ID IN NUMBER, RESOLVER_ID IN NUMBER)
  AS
  BEGIN
    UPDATE ERS_REIMB SET 
    REIMB_STATUS_ID = STATUS_ID,
    REIMB_RESOLVER = RESOLVER_ID;
    
    COMMIT;
  END;
  /


commit;