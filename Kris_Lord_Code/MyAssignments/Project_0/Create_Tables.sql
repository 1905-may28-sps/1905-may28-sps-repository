/*******************************************************************************
   Create Tables for Banking Application
*******************************************************************************/
CREATE TABLE Bank_User(
    UserId NUMBER NOT NULL,
    FirstName VARCHAR2(40) NOT NULL,
    LastName VARCHAR2(20) NOT NULL,
    Email VARCHAR2(60) NOT NULL,
    LoginName VARCHAR (40) NOT NULL UNIQUE,
    Password VARCHAR(64) NOT NULL,
    CONSTRAINT PK_Bank_User PRIMARY KEY (UserId)
);

CREATE SEQUENCE Bank_User_SEQ;

CREATE TRIGGER Bank_User_Trigger
BEFORE INSERT ON Bank_User
FOR EACH ROW
BEGIN
   SELECT Bank_User_SEQ.NEXTVAL
   INTO :NEW.UserId
   FROM DUAL;
END;
/

CREATE TABLE Bank_Account(
    AccountId NUMBER NOT NULL PRIMARY KEY,
    Balance DECIMAL (20,2) NOT NULL,
    UserId NUMBER NOT NULL,
    AccountType VARCHAR(40) NOT NULL,
    CONSTRAINT FK_User_Bank_Account FOREIGN KEY (UserId) REFERENCES Bank_User(UserId)
);

CREATE SEQUENCE Bank_Account_SEQ;

CREATE TRIGGER Bank_Account_Trigger
BEFORE INSERT ON Bank_Account
FOR EACH ROW
BEGIN
   SELECT Bank_Account_SEQ.NEXTVAL
   INTO :NEW.AccountId
   FROM DUAL;
END;
/

commit;

INSERT INTO BANK_USER (FIRSTNAME, LASTNAME, EMAIL, LOGINNAME, PASSWORD)
VALUES ('John', 'Doe', 'johndoe@gmail.com', 'johndoe', 'enter456');

INSERT INTO BANK_ACCOUNT (BALANCE, USERID, ACCOUNTTYPE)
VALUES (5000.89, 1, 'Checking');

INSERT INTO BANK_ACCOUNT (BALANCE, USERID, ACCOUNTTYPE)
VALUES (10.43, 1, 'Savings');

INSERT INTO BANK_ACCOUNT (BALANCE, USERID, ACCOUNTTYPE)
VALUES (34.00, 2, 'Checking');

INSERT INTO BANK_ACCOUNT (BALANCE, USERID, ACCOUNTTYPE)
VALUES (1200.98, 2, 'Savings');

INSERT INTO BANK_ACCOUNT (BALANCE, USERID, ACCOUNTTYPE)
VALUES (10453.87, 3, 'Checking');

INSERT INTO BANK_ACCOUNT (BALANCE, USERID, ACCOUNTTYPE)
VALUES (43280.65, 3, 'Savings');

create or replace PROCEDURE GET_UserId
(Us_Id IN NUMBER)
AS
BEGIN 
OPEN Us_Id FOR SELECT UserId FROM BANK_USER WHERE ID = Us_Id;
END;

CREATE OR REPLACE PROCEDURE DEPOSIT (BAL IN NUMBER, UID IN NUMBER, ACCID IN NUMBER)
IS
BEGIN
UPDATE BANK_ACCOUNT
SET BALANCE=(BALANCE+BAL)
WHERE USERID=UID AND ACCOUNTID=ACCID;
COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE WITHDRAW (BAL IN NUMBER, UID IN NUMBER, ACCID IN NUMBER)
IS
BEGIN
UPDATE BANK_ACCOUNT
SET BALANCE=(BALANCE-BAL)
WHERE USERID=UID AND ACCOUNTID=ACCID;
COMMIT;
END;
/
